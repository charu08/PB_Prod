<apex:page title="Closing Coordinator Dialog">
<style>
.table {
   width:100%;
}
.table th {
   border: 1px solid #ccc !important;
   background-color:#1797c0;
   color:#fff;
   padding:5px 3px;
   text-align:center;  
   width: 17%;
   cursor: pointer;
}
.table td {
   border:0;
   border-bottom:1px solid #ccc;
   border-top:1px solid #ccc;
   border-right: 1px solid #ccc !important;
   padding:3px;
   text-align:center;
   width: 17%;
}
.table tr:nth-child(even) {
   background-color:#ececec;
}
.table tr:hover {
   background-color:#fffdd2;
}
.time{
    width: 50px;    
}
</style>
    <script type="text/javascript">
        var __sfdcSessionId= '{!GETSESSIONID()}';
    </script>
    <script src="//code.jquery.com/jquery-3.1.1.min.js" type="text/javascript"></script>
    <script src="/soap/ajax/28.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/28.0/apex.js" type="text/javascript"></script>
    <script src="{!URLFOR($Resource.momentjslibrary,'momentjs/moment.min.js')}" />
    <script src="{!URLFOR($Resource.momentjslibrary,'momentjs/moment-timezone-with-data.min.js')}" />
        
    <div style="display:none;" id="filterContainer">
        <span style="margin-left:10px;">Duration</span>
        <Select id="ddlTime" onchange="init();">
            <option value="1" >Next 1 Day</option>
            <option value="3">Next 3 Days</option>
            <option value="7">Next 7 Days</option>
            <option value="14">Next 14 Days</option>
        </Select>
    </div>
    
    <div style="display:none;" id="filterDuration">
        <span style="margin-left:10px;">Duration</span>
        <Select id="ddlTimeNCI" onchange="init();">
            <option value="All" >All</option>
            <option value="30">30 Days</option>
            <option value="60">60 Days</option>
            <option value="90">90 Days</option>
        </Select>
    </div>
            
    <div style="margin-top:10px;overflow-x:auto;clear:both;">
        <table class="table" cellpadding="0" cellspacing="0" id="tblData">
            
        </table>
    </div>
    
    

    <script>
        
        $(document).ready(function(){
            var username = getUrlParameter("uname");
            var reportType = getUrlParameter("rtype");
            
            if(reportType == "rfrl")
            {
                document.title = username +" - Request for Repairs List details";
            }
            else if(reportType == "fw")
            {
                document.title = username +" - Final Walk details";
            }
            else if(reportType == "lu")
            {
                document.title = username +" - Lender Update details";
            }
            else if(reportType == "au")
            {
                document.title = username +" - Attorney Update details";
            }
            else if(reportType == "cu")
            {
                document.title = username +" - Client Update details";
            }
            else if(reportType == "nci")
            {
                document.title = username +" - New Construction Inspections details";
                var duration = getUrlParameter("duration");
                $("#filterDuration").show();
                $("#ddlTimeNCI").val(duration);
                console.log('----------duration in nci-------------',duration);
            }
            else if(reportType == "icu")
            {
                document.title = username +" - Inspections Coming Up details";
                var duration = getUrlParameter("duration");
                $("#filterContainer").show();
                $("#ddlTime").val(duration);
            }
            else if(reportType == "pbo")
            {
                document.title = username +" - Pending Bust Out Closings details";
            }
            else if(reportType == "pc")
            {
                document.title = username +" - Pending Closings details";
            }
            else if(reportType == "appu")
            {
                document.title = username +" - Appraisal Update";
            }
            init();
        });
         
        function getUrlParameter(name) {
            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        }
        function init(){
            
            var uid = getUrlParameter("uid");
            var reportType = getUrlParameter("rtype");
            let agentType = getUrlParameter("agentType");
            
            var soql = "";
            var data = [];
            if(reportType == "appu")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c where ClosingCoordinatorProfile__c in ('MCRE Closing Coordinator') and Closing_Specialist__c ='"+uid+"' ";
                soql += " and Appraisal_Update__c=false and RETHINK_Closed_Deal_Date__c.AddDays(-14)=today()";
                soql += " order by Contract_Date_date__c desc";
                var today=new Date();
                today=Date.today();
                var appu = getData(soql);
                $(appu).each(function(){
                    if(this.RETHINK_Closed_Deal_Date__c - today ==14){
                        data.push(this);
                    }
                });
            }
            
            if(reportType == "rfrl")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c ";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"' and Closing_Specialist__r.isActive = true";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"' and Closing_Coordinator__r.isActive = true";
                    
                soql += " and Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out') and Home_Inspection_Date__c <= TODAY and RFR_Completed_Date__c = null and As_Is__c=false";
                soql += " order by Contract_Date_date__c desc";
                
                console.log('-----soql-------',soql);
                data = getData(soql);
            }
            else if(reportType == "fw")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                soql += " and Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out') and Final_Walk_Through_Date__c = null ";
                soql += " order by Contract_Date_date__c desc";
                
                var fwdata = getData(soql); 
                $(fwdata).each(function(){
                    var today = new Date();
                    var closingDate = new Date(this.RETHINK_Closed_Deal_Date__c);
                    closingDate = closingDate.addDays(-7);
                    if(today >= closingDate)
                    {
                        data.push(this);
                    }
                });
            }
            else if(reportType == "lu")
            {
                data = [];
                soql =  "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c, "+
                        " (Select Id,Subject from Tasks where Type = 'Lender Update' and ActivityDate = Last_N_Days:10 ) "+
                        " from pba__Closing__c";
                        
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                            
                soql += " and Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out') and RecordType.Name = 'Buyer Rep' and New_Construction__c = false and Loan_Type__c!='CASH'";
                soql += " order by Contract_Date_date__c desc";
                
                var ludata = getData(soql);
                $(ludata).each(function(){
                    
                    if(this.Tasks == null )
                    {
                        data.push(this);
                    }
                });
            }
            else if(reportType == "au")
            {
                data = [];
                soql =  "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c, "+
                        " (Select Id,Subject from Tasks where Type = 'Attorney Update' and ActivityDate = Last_N_Days:15 ) "+
                        " from pba__Closing__c";
                        
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                            
                soql += " and Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out') and New_Construction__c = false ";
                soql += " order by Contract_Date_date__c desc";
                
                var audata = getData(soql);
                $(audata).each(function(){
                    
                    if(this.Tasks == null )
                    {
                        data.push(this);
                    }
                });
            }
            else if(reportType == "cu")
            {
                data = [];
                soql =  "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c, New_Construction__c, "+
                        " (Select Id,Subject,ActivityDate from Tasks where Type = 'Client Update' Limit 1) "+
                        " from pba__Closing__c";
                        
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                soql += " and Closing_Status__c not in ('Closed','Bust Out')  ";
                soql += " order by Contract_Date_date__c desc";
                
                var cudata = getData(soql);
                $(cudata).each(function(){
                    
                    if(eval(this.New_Construction__c) == false)
                    { 
                        if(this.Tasks == null)
                        {
                           data.push(this);
                        }
                        else{
                            var actDate = this.Tasks.records.ActivityDate;
                            if(actDate)
                            {
                                var today = new Date();
                                var diff = daydiff(new Date(actDate),today);
                                if(diff > 5)
                                {
                                    data.push(this);
                                }    
                            }
                        }    
                        
                    }
                    if(eval(this.New_Construction__c) == true)
                    {
                        if(this.Tasks == null)
                        {
                            data.push(this);
                        }else{
                            var actDate = this.Tasks.records.ActivityDate;
                            if(actDate)
                            {
                                var today = new Date();
                                var diff = daydiff(new Date(actDate),today);
                                if(diff > 15)
                                {
                                    data.push(this);
                                }    
                            }
                        }
                    }
                });
            }
            else if(reportType == "nci")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c, RETHINK_Closed_Deal_Date__c, New_Construction_Walk_Through__c, New_Construction_Home_Inspection__c from pba__Closing__c ";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                if($("#ddlTimeNCI").val()=='30'){
                    soql += " and RETHINK_Closed_Deal_Date__c >= LAST_n_DAYS:30 and RETHINK_Closed_Deal_Date__c <= today";
                }
                if($("#ddlTimeNCI").val()=='60'){
                    soql += " and RETHINK_Closed_Deal_Date__c >= LAST_n_DAYS:60 and RETHINK_Closed_Deal_Date__c <= today";
                }
                if($("#ddlTimeNCI").val()=='90'){
                    soql += " and RETHINK_Closed_Deal_Date__c >= LAST_n_DAYS:90 and RETHINK_Closed_Deal_Date__c <= today";
                }
                soqlWhere = " and Closing_Status__c='Pending' and New_Construction__c = true ";
                soql += soqlWhere;
                //soqlWhere = " and rethink3__Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out') and New_Construction__c = true ";
                //soqlWhere += " and rethink3__Closed_Deal_Date__c<= Next_N_Days:30 and rethink3__Closed_Deal_Date__c>=TODAY ";
                //soqlWhere += " and New_Construction_Walk_Through__c >= TODAY ";
                //soqlWhere += " and New_Construction_Home_Inspection__c >= TODAY ";
                //soql += soqlWhere;
                
                soql += " order by Contract_Date_date__c desc";
                console.log('-------soql------------',soql);
                data = getData(soql);
            }
            if(reportType == "icu")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c ";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                soqlWhere = " and Closing_Status__c not in ('Closed','Bust Out','Pending Bust Out')  ";
                soqlWhere += " and Home_Inspection_Date__c = Next_N_Days:"+ $("#ddlTime").val();
                soql += soqlWhere;
                
                soql += " order by Contract_Date_date__c desc";
                
                data = getData(soql);
            }
            if(reportType == "pbo")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c ";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                soqlWhere = " and Closing_Status__c = 'Pending Bust Out' ";
                soqlWhere += " and Earnest_Money_Returned__c = null and Mutual_Release_Signed__c = null ";
                soql += soqlWhere;
                
                soql += " order by Contract_Date_date__c desc";
                
                data = getData(soql);
            }
            if(reportType == "pc")
            {
                data = [];
                soql = "Select Id,Name,Contract_Date_date__c,Home_Inspection_Date__c,Termite_Inspection_Date__c,Final_Walk_Through_Date__c,RETHINK_Closed_Deal_Date__c from pba__Closing__c ";
                
                if(agentType == 'specialist')
                    soql += " where Closing_Specialist__c ='"+uid+"'";
                else if(agentType == 'coordinator')
                    soql += " where Closing_Coordinator__c ='"+uid+"'";
                    
                soqlWhere = " and Closing_Status__c = 'Pending' and New_Construction__c = false";
                soql += soqlWhere;
                
                soql += " order by Contract_Date_date__c desc";
                data = getData(soql);
            }
            
            if(reportType == "nci")
            {
                 processDataNCI(data)
            }
            else
            {
                processData(data)
            }
        }
    
        function processData(data)
        {
            $("#tblData").html("");
            $("#tblData").append("<tr>"+
                                    "<th direction='desc' onclick='sortClosingName(this);'>Closing Name</th>"+
                                    "<th direction='desc' onclick='sortTable(`contractdate`,this);'>Contract Date</th>"+
                                    "<th direction='desc' onclick='sortTable(`homeinspdate`,this);'>Home Inspection Date</th>"+
                                    "<th direction='desc' onclick='sortTable(`terminspdate`,this);'>Termite Inspection Date</th>"+
                                    "<th direction='desc' onclick='sortTable(`finaldate`,this);'>Final Walk Through Date</th>"+
                                    "<th direction='desc' onclick='sortTable(`closedate`,this);'>Close Date</th>"+
                                 "</tr>");
            
            $(data).each(function(){
                
                var contractDate = this.Contract_Date_date__c == null ? "" : this.Contract_Date_date__c;
                contractDate = toChicagoTZ(contractDate);
                
                var homeInspDate = this.Home_Inspection_Date__c == null ? "" : this.Home_Inspection_Date__c;
                homeInspDate = toChicagoTZ(homeInspDate);
                
                var termInspDate = this.Termite_Inspection_Date__c == null ? "" : this.Termite_Inspection_Date__c;
                termInspDate = toChicagoTZ(termInspDate);
                
                var finalWalkThruDate = this.Final_Walk_Through_Date__c == null ? "" : formatDate(parseDate(this.Final_Walk_Through_Date__c),"MM-dd-yyyy");
                //finalWalkThruDate = toChicagoTZ(finalWalkThruDate);
                
                var closeDate = this.RETHINK_Closed_Deal_Date__c == null ? "" : formatDate(parseDate(this.RETHINK_Closed_Deal_Date__c),"MM-dd-yyyy");
                //closeDate = toChicagoTZ(closeDate);
                
                $("#tblData").append("<tr data='true'>"+
                                        "<td closingname='true'><a href='/"+this.Id+"' target='_blank'>"+this.Name+"</a></td>"+
                                        "<td contractdate='true'>"+contractDate+"</td>"+
                                        "<td homeinspdate='true'>"+homeInspDate+"</td>"+
                                        "<td terminspdate='true'>"+termInspDate+"</td>"+
                                        "<td finaldate='true'>"+finalWalkThruDate+"</td>"+
                                        "<td closedate='true'>"+closeDate+"</td>"+
                                     "</tr>");
            });
        }
        function toChicagoTZ(dt){
            if(dt != "")
            {
                dt = parseDate(dt);
                var newdt = toTimeZone(dt,'America/chicago');
                dt = formatDate(new Date(newdt),"MM-dd-yyyy");    
            }
            return dt;
        }
        function parseDate(input) {
            var parts = input.match(/(\d+)/g);
            return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based
        }
        function toTimeZone(time, zone) {
            var format = 'YYYY/MM/DD HH:mm:ss';
            return moment(time, format).tz(zone).format(format);
        }
        function processDataNCI(data)
        {
            $("#tblData").html("");
            $("#tblData").append("<tr>"+
                                 "<th direction='desc' onclick='sortClosingName(this);'>Closing Name</th>"+
                                 "<th direction='desc' onclick='sortTable(`closedate`,this);'>Closing Date</th>"+
                                 "<th direction='desc' onclick='sortTable(`walkthroughdate`,this);'>New Construction Walk Through</th>"+
                                 "<th direction='desc' onclick='sortTable(`homeinspectiondate`,this);'>New Construction Home Inspection</th>"+
                                 "</tr>");
            
            $(data).each(function(){
                
                
                var closeDate = this.RETHINK_Closed_Deal_Date__c == null ? "" : this.RETHINK_Closed_Deal_Date__c;
                closeDate = toChicagoTZ(closeDate);
                
                var walkThruDate = this.New_Construction_Walk_Through__c == null ? "" : this.New_Construction_Walk_Through__c;
                walkThruDate = toChicagoTZ(walkThruDate);
                
                var homeInspDate = this.New_Construction_Home_Inspection__c == null ? "" : this.New_Construction_Home_Inspection__c;
                homeInspDate = toChicagoTZ(homeInspDate);
                
                $("#tblData").append("<tr data='true'>"+
                                     "<td closingname='true'><a href='/"+this.Id+"' target='_blank'>"+this.Name+"</a></td>"+
                                     "<td closedate='true'>"+closeDate+"</td>"+
                                     "<td walkthroughdate='true'>"+walkThruDate+"</td>"+
                                     "<td homeinspectiondate='true'>"+homeInspDate+"</td>"+
                                     "</tr>");
            });
        }
        function sortClosingName(obj){
            var $tbody = $('#tblData');
            if($(obj).attr("direction") == "asc")
            {
                $tbody.find('tr[data=true]').sort(function(a,b){ 
                    var tda = $(a).find('td[closingname=true]').text(); // can replace 1 with the column you want to sort on
                    var tdb = $(b).find('td[closingname=true]').text(); // this will sort on the second column
                    
                    return String.prototype.localeCompare.call(tda,tdb);
                }).appendTo($tbody);
                $(obj).attr("direction","desc");
            }
            else if($(obj).attr("direction") == "desc")
            {
                $tbody.find('tr[data=true]').sort(function(a,b){ 
                    var tda = $(a).find('td[closingname=true]').text(); // can replace 1 with the column you want to sort on
                    var tdb = $(b).find('td[closingname=true]').text(); // this will sort on the second column
                    
                    return String.prototype.localeCompare.call(tdb,tda);
                }).appendTo($tbody);    
                $(obj).attr("direction","asc");
            }
            
        }
        function sortTable(ofType,obj){
            var $tbody = $('#tblData');
            if($(obj).attr("direction") == "asc")
            {
                $tbody.find('tr[data=true]').sort(function(a,b){ 
                    var tda = $(a).find('td['+ofType+'=true]').text(); // can replace 1 with the column you want to sort on
                    var tdb = $(b).find('td['+ofType+'=true]').text(); // this will sort on the second column
                    
                    tda =  tda == "" ? new Date("01-01-1900") : new Date(tda);
                    tdb =  tdb == "" ? new Date("01-01-1900") : new Date(tdb);
                    
                    return tda < tdb ? -1 : tda > tdb ? 1 : 0;           
                    
                }).appendTo($tbody);
                
                $(obj).attr("direction","desc");
            }
            else if($(obj).attr("direction") == "desc")
            {
                $tbody.find('tr[data=true]').sort(function(a,b){ 
                    var tda = $(a).find('td['+ofType+'=true]').text(); // can replace 1 with the column you want to sort on
                    var tdb = $(b).find('td['+ofType+'=true]').text(); // this will sort on the second column
                    
                    tda =  tda == "" ? new Date("01-01-1900") : new Date(tda);
                    tdb =  tdb == "" ? new Date("01-01-1900") : new Date(tdb);
                    
                    return tdb < tda ? -1 : tdb > tda? 1 : 0;           
                    
                }).appendTo($tbody);
                $(obj).attr("direction","asc");
            }
        }
    
        function getValue(val)
        {
            var returnVal = val == null ? "" : val;
            return returnVal;
        }
        formatDate = function date2str(x, y) {
            var z = {
                M: x.getMonth() + 1,
                d: x.getDate(),
                h: x.getHours(),
                m: x.getMinutes(),
                s: x.getSeconds()
            };
            y = y.replace(/(M+|d+|h+|m+|s+)/g, function(v) {
                return ((v.length > 1 ? "0" : "") + eval('z.' + v.slice(-1))).slice(-2)
            });
        
            return y.replace(/(y+)/g, function(v) {
                return x.getFullYear().toString().slice(-v.length)
            });
        }
        
        function daydiff(first, second) {
            return Math.round((second-first)/(1000*60*60*24));
        }
        
        
        Date.prototype.addDays = function(days) {
            this.setDate(this.getDate() + parseInt(days));
            return this;
        };
        
        function getData(soql)
        {
            var results=[];
            sforce.connection.sessionId='{!$Api.Session_ID}';          
            result = sforce.connection.query(soql);
            var done=false;
          
            while(!done)
            {
                var records=result.getArray("records");
            
                console.log('Records: ' + records.length);
            
                for(var i=0;i < records.length;i++)
                    results.push(records[i]);
                
                if(result.getBoolean("done"))
                    done=true;
                else
                    result=sforce.connection.queryMore(result.queryLocator);
            }    
            
            return results;
        }
                function getItemByKey(arr, key, value){
            // here we look for existing group item in the result array
            return arr.reduce(function (prev, cur) {
                if (prev == null && cur[key] == value) {
                    return cur;
                }
                return prev;
            }, null);
        }
        
        function checkPropForGroup(prop, key){
            // here we check which columns should stay in the group,
            // and which should go down to group items.
            return prop == key || prop == key.replace("_id", "_name");
        }
        
        function cloneSuperItem(src, key){
            // create super item by copying only group related fields 
            var item = {};
            for (prop in src){
                if (checkPropForGroup(prop, key)){
                    item[prop] = src[prop];
                }
            }
            item[key+'_group'] = [];
            return item;
        }
        
        function cloneSubItem(src, key){
            // create sub-item by copying all but group related fields 
            var item = {};
            for (prop in src){
                if (!checkPropForGroup(prop, key)){
                    item[prop] = src[prop];
                }
            }
            return item;
        }
        
        function groupArray(arr, args, lvl){
            var key = args[lvl];
            var result = [];
            arr.forEach(function (item, ind, a){
                // find or create super item for group and then create sub item 
                // and push it there 
                var keyItem = getItemByKey(result, key, item[key]);
                if (!keyItem){
                    keyItem = cloneSuperItem(item, key);
                    result.push(keyItem);
                }
                subItem = cloneSubItem(item, key);
                keyItem[key+'_group'].push(subItem);
            });
            if (args[lvl+1]){
                // recursively make grouping on lower level 
                for (var i = 0; i < result.length; i++){
                    result[i][key+'_group'] = 
                      groupArray(result[i][key+'_group'], args, lvl + 1);
                }
            }
            return result;
        }
        
        function groupArrayMain(arr, keysArray){
            // keys should be simply listed as parameters in order from top group to lower
            return JSON.stringify(groupArray(arr, arguments, 1),null,'\n')
        }
    </script>

</apex:page>